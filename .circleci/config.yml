version: 2.1
orbs:
  terraform: circleci/terraform@2.1.0  

executors:
  terraform-executor:
    docker:
      - image: hashicorp/terraform:0.14.3
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    working_directory: ~/src      

aliases:
  - &show-current-branch-name
    run:
      name: Show current branch
      command: echo ${CIRCLE_BRANCH}
      
jobs:
  build_init:
    executor: terraform-executor
    steps:
      - checkout
      - *show-current-branch-name
      - run:
          command: >-
            echo "credentials \"app.terraform.io\" {token =
            \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc
          name: Create .terraformrc file locally

  terraform-validate:
    executor: terraform-executor
    steps:
      - checkout
      - *show-current-branch-name
      - run:
          command: >-
            echo "credentials \"app.terraform.io\" {token =
            \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc
          name: Create .terraformrc file locally      
      - run:                  
          name: Terraform Validate & Format
          command: |
            terraform init 
              #-backend-config=backend.hcl
              #path: ..
            terraform validate
            # terraform fmt -check            

  terraform-plan-and-apply:
    executor: terraform-executor
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - *show-current-branch-name
      - run:
          command: >-
            echo "credentials \"app.terraform.io\" {token =
            \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc
          name: Create .terraformrc file locally       
      - run:
          name: Terraform Plan
          command: |
            echo "db_username=$db_username" >> tee -a ../gz.auto.tfvars
            echo "db_password=$db_password" >> tee -a ../gz.auto.tfvars
            echo "db_username=$db_username" >> tee -a ../gz.auto.tfvars
            echo "db_password=$db_password" >> tee -a ../gz.auto.tfvars            
            terraform init 
            #terraform workspace select test || terraform workspace new test
            # terraform init 
              #-backend-config=backend.hcl
              #path: .. 
            terraform plan
      - run:
          name: Terraform Apply
          command: |
            # terraform workspace select test
            terraform apply --auto-approve
            
  terraform-destroy:
    executor: terraform-executor
    steps:
      - checkout
      - *show-current-branch-name
      - run:
          command: >-
            echo "credentials \"app.terraform.io\" {token =
            \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc
          name: Create .terraformrc file locally       
      - run:
          name: Terraform Destroy
          command: |
            terraform init 
              #-backend-config=backend.hcl
              #path: ..
            # terraform workspace select test || terraform workspace new test
            terraform destroy --auto-approve

workflows:
  deploy_test_infra:
    jobs:
      - build_init
      - terraform-validate:
          requires:
            - build_init
          filters:
            branches:
              only:
                - test-infra
                - test_prod_infra
      - terraform-plan-and-apply:
          requires:
            - terraform-validate
          filters:
            branches:
              only:
                - test-infra
                - test_prod_infra
      - hold:
          type: approval
          requires:
            - terraform-plan-and-apply
      - terraform-destroy:
          requires:
            - hold
          filters:
            branches:
              only:
                - test-infra
                - test_prod_infra

