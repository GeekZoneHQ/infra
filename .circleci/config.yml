version: 2.1
orbs:
  terraform: circleci/terraform@2.1.0  

executors:
  terraform-executor:
    docker:
      - image: hashicorp/terraform:0.14.3
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    working_directory: ~/src      

aliases:
  - &show-current-branch-name
    run:
      name: Show current branch
      command: echo ${CIRCLE_BRANCH}
      
jobs:
  terraform-init-validate-plan-apply:
    executor: terraform-executor
    steps:
      - checkout
      - *show-current-branch-name
      - run:
          name: Create .terraformrc file locally
          command: >-
            echo "credentials \"app.terraform.io\" {token =
            \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc

      - run:                  
          name: Terraform Validate & Format
          command: |
            terraform init
            terraform validate
      - run:                  
          name: Terraform Plan & Apply
          command: |            
            terraform plan -var 'k8snamespace=Helloworld'
            terraform apply -var 'k8snamespace=Helloworld'
  terraform-destroy:
    executor: terraform-executor
    steps:
      - checkout
      - *show-current-branch-name
      - run:
          command: >-
            echo "credentials \"app.terraform.io\" {token =
            \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc
          name: Create .terraformrc file locally       
      - run:
          name: Terraform Destroy
          command: |
            terraform init
            terraform destroy --auto-approve

workflows:
  deploy_test_infra:
    jobs:      
      - terraform-init-validate-plan-apply:
          filters:
            branches:
              only:
                - test-infra
                - test_prod_infra
      - hold:
          type: approval
          requires:
            - terraform-init-validate-plan-apply
      - terraform-destroy:
          requires:
            - hold
          filters:
            branches:
              only:
                - test-infra
                - test_prod_infra

