#!/bin/sh -e

# Create resources in the k8s cluster
cd azure/k8s/
kubectl apply -f namespaces.yaml
envsubst < sealed-secrets/main-key-secret.yaml | sponge sealed-secrets/main-key-secret.yaml
kubectl apply -f sealed-secrets/main-key-secret.yaml
kubectl apply -f sealed-secrets/controller.yaml
kubectl apply -f sealed-secrets/sealed-secrets.yaml
kubectl apply -f ingress-nginx/
sleep 30
kubectl apply -f external-dns/
kubectl apply -f cert-manager/cert-manager.yaml
sleep 120
kubectl apply -f cert-manager/clusterissuer.yaml
kubectl apply -f cert-manager/wildcard-cert.yaml
sleep 30
kubectl apply -f rabbitmq/cluster-operator.yaml
sleep 30
kubectl apply -f rabbitmq/rabbitmq-cluster.yaml
sleep 30
kubectl apply -f rabbitmq/ingress-rabbitmq-mgmt.yaml
export CELERY_BROKER_URL=$(echo -n "amqp://$(kubectl -n rabbitmq-system get secret geek-zone-cluster-default-user -o jsonpath='{.data.username}' | base64 --decode):$(kubectl -n rabbitmq-system get secret geek-zone-cluster-default-user -o jsonpath='{.data.password}' | base64 --decode)@$(kubectl -n rabbitmq-system get service geek-zone-cluster -o jsonpath='{.spec.clusterIP}')")
envsubst < celery/celery-deploy.yaml | sponge celery/celery-deploy.yaml
kubectl apply -f celery/celery-deploy.yaml
kubectl apply -f postgres/postgres.yaml
sleep 30
envsubst < prod-environment/deploy-gz-web.yaml | sponge prod-environment/deploy-gz-web.yaml
kubectl apply -f prod-environment/
kubectl -n prod rollout status deployment gz-web
